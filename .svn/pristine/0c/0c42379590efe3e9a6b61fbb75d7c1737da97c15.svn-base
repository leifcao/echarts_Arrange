// 条形队列图
var barChartOne = document.getElementById('barChartFirst')
var barChartFirst = echarts.init(barChartOne)
barChartOneOption = {
    backgroundColor: '',
    xAxis: {
        show: false,

    },
    grid: {
        top: '20%',
        right: '8%',
        left: '14%',
        bottom: '12%'
    },
    yAxis: [{
        show: true,
        data: ['一级手术', '二级手术', '三级手术', '四级手术', '五级手术'],
        inverse: true,
        axisLine: {
            show: false
        },
        splitLine: {
            show: false
        },
        axisTick: {
            show: false
        },
        axisLabel: {
            textStyle: {
                color: function(value, index) {
                    var num = colorList.length;
                    return colorList[index % num]
                }
            },
            formatter: function(value, index) {
                return [
                    '{title|' + value + '} '
                ].join('\n')
            },
            rich: {}
        },

    }, {
        show: true,
        inverse: true,
        data: [683, 234, 234, 523, 345],
        axisLabel: {
            textStyle: {
                color: function(value, index) {
                    var num = colorList.length;
                    return colorList[index % num]
                }
            }
        },
        axisLine: {
            show: false
        },
        splitLine: {
            show: false
        },
        axisTick: {
            show: false
        },

    }],
    series: [{
        name: '条',
        type: 'bar',
        yAxisIndex: 0,
        data: [78, 50, 50, 70, 69],
        barWidth: 12,
        itemStyle: {
            normal: {
                barBorderRadius: 30,
                color: function(params) {
                    var num = colorList.length;
                    return colorList[params.dataIndex % num]
                },
            }
        },
        label: {
            normal: {
                show: true,
                position: 'inside',
                formatter: '{c}%'
            }
        },
        animationDelay: function(idx) {
            return idx * 600;
        },
    }],
    animationEasing: 'elasticOut',

};
barChartFirst.setOption(barChartOneOption)



// 条形堆积图
var barChartTwo = document.getElementById('barChartSecond')
var barChartSecond = echarts.init(barChartTwo)

var spNum = 5,
    _max = 110;
var legendData = ['常住人口', '户籍人口', '农村人口', '城镇居民'];
var y_data = ['成都市', '绵阳市', '自贡市', '攀枝花市', '泸州市', '德阳市'];
var _datamax = [100, 100, 100, 100, 100, 100],
    _data1 = [10, 15, 10, 13, 15, 11],
    _data2 = [19, 5, 40, 33, 15, 51],
    _data3 = [21, 55, 10, 13, 35, 11];
_data4 = [21, 55, 10, 13, 35, 11];
var fomatter_fn = function(v) {
    return (v.value / _max * 100).toFixed(0)
}
var _label = {
    normal: {
        show: true,
        position: 'inside',
        formatter: fomatter_fn,
        textStyle: {
            color: '#ffffff',
            fontSize: 12
        }
    }
};
barChartTwoOption = {
    backgroundColor: '',
    color: colorList,
    legend: {
        data: legendData,
        textStyle: {
            color: textColor,
            fontSize: 12,
        },
        itemWidth: 14,
        itemHeight: 8,
    },
    grid: {
        top: '20%',
        right: '16%',
        left: '14%',
        bottom: '12%'
    },
    tooltip: {
        show: true,
        backgroundColor: 'rgba(51, 50, 51,0.8)',
        // borderColor: '#ddd',
        borderWidth: 1,
        textStyle: {
            color: '#e2e9ff',
            fontSize: 12
        },
        formatter: function(p) {
            console.log(p);
            var _arr = p.seriesName.split('/'),
                idx = p.seriesIndex; //1，2，3
            return '名称：' + p.seriesName + '<br>' + '完成：' + p.value + '<br>' + '占比：' + (p.value / _max * 100).toFixed(0) + '%';
        },
        extraCssText: 'box-shadow: 0 0 5px rgba(0, 0, 0, 0.1)'
    },
    xAxis: {
        splitNumber: spNum,
        interval: _max / spNum,
        max: _max,
        axisLabel: {
            show: false,
            formatter: function(v) {
                var _v = (v / _max * 100).toFixed(0);
                return _v == 0 ? _v : _v + '%';
            }
        },
        axisLine: {
            show: false
        },
        axisTick: {
            show: false
        },
        splitLine: {
            show: false
        }

    },
    yAxis: [{
        data: y_data,
        axisLabel: {
            fontSize: 12,
            color: textColor

        },
        axisLine: {
            show: false
        },
        axisTick: {
            show: false
        },
        splitLine: {
            show: false
        }
    }, {
        show: false,
        data: y_data,
        axisLine: {
            show: false
        }
    }],
    series: [{
        type: 'bar',
        name: '常住人口',
        stack: '2',
        label: _label,
        legendHoverLink: false,
        barWidth: 12,
        itemStyle: {
            normal: {
                color: '#8882f7',
                barBorderRadius: [8, 0, 0, 8], //柱状图圆角设置
                fontSize: 12,
            },
            emphasis: {
                color: '#8882f7'
            }
        },
        data: _data1,
        animationDelay: function(idx) {
            return idx * 600;
        }
    }, {
        type: 'bar',
        name: '户籍人口',
        stack: '2',
        legendHoverLink: false,
        barWidth: 12,
        label: _label,
        itemStyle: {
            normal: {
                color: '#ffa06c'
            },
            emphasis: {
                color: '#ffa06c'
            }
        },
        data: _data2,
        animationDelay: function(idx) {
            return idx * 600;
        }
    }, {
        type: 'bar',
        stack: '2',
        name: '农村人口',
        legendHoverLink: false,
        barWidth: 12,
        label: _label,
        itemStyle: {
            normal: {
                color: '#01A4F7'
            },
            emphasis: {
                color: '#01A4F7'
            }
        },
        data: _data3,
        animationDelay: function(idx) {
            return idx * 600;
        }
    }, {
        type: 'bar',
        stack: '2',
        name: '城镇居民',
        legendHoverLink: false,
        barWidth: 12,
        label: _label,
        itemStyle: {
            normal: {
                color: '#2EDDCD',
                barBorderRadius: [0, 8, 8, 0], //柱状图圆角设置
            },
            emphasis: {
                color: '#2EDDCD'
            }
        },
        data: _data4,
        animationDelay: function(idx) {
            return idx * 600;
        }
    }],
    animationEasing: 'elasticOut',

};
// 设置颜色
setSeriesColor(barChartTwoOption.series)
barChartSecond.setOption(barChartTwoOption)


// 正负条形图
var barChartThree = document.getElementById('barChartThird')
var barChartThird = echarts.init(barChartThree)

/**
 * 照着一个案例改的 
 * 增加下面的数值显示 
 * */
var myData = ['一审服', '撤诉率', '调解率', '实际', '裁判率', '执行标', '再审']
var lineData = [100, 100, 100, 100, 100, 100, 100]
var lastYearData = {
    1: [3, 20, 62, 34, 55, 65, 33]
}
var thisYearData = {
    1: [11, 38, 23, 39, 66, 66, 79]
}
var timeLineData = [1]

barChartThreeoption = {
    baseOption: {
        backgroundColor: '',
        timeline: {
            show: false,
            top: 0,
            data: []
        },
        legend: {
            // top: '5%',
            // left: '40%',
            x: 'center',
            y: '2',
            itemWidth: 10,
            itemHeight: 6,
            // itemGap: 160,
            icon: 'horizontal',
            textStyle: {
                color: textColor,
                fontSize: 12,
            },
            data: ['2017', '2018']
        },
        grid: [{
            show: false,
            left: '5%',
            top: '12%',
            bottom: '8%',
            containLabel: true,
            width: '37%'
        }, {
            show: false,
            left: '51%',
            top: '12%',
            bottom: '11%',
            width: '0%'
        }, {
            show: false,
            right: '5%',
            top: '12%',
            bottom: '8%',
            containLabel: true,
            width: '37%'
        }],
        xAxis: [{
            type: 'value',
            inverse: true,
            axisLine: {
                show: false
            },
            axisTick: {
                show: false
            },
            position: 'bottom',
            axisLabel: {
                show: true,
                //     formatter:function(value)  
                //   {  
                //         //return '\n\n\n\n' + value;
                //      // return '\n' + value
                //      return value
                //      // return value + 'virus'
                //     // return value.split("").join("\n");  
                //   },
                textStyle: {
                    color: textColor, //X轴左侧字体设置
                    fontSize: 12,
                }
            },
            splitLine: {
                show: false
            }
        }, {
            gridIndex: 1,
            show: false,
        }, {
            gridIndex: 2,
            axisLine: {
                show: false
            },
            axisTick: {
                show: false
            },
            position: 'bottom',
            axisLabel: {
                show: true,
                interval: 0,
                // formatter:function(value)  
                //   {  
                //         //return '\n\n\n\n' + value;
                //     //  return '\n' + value
                //   return value
                //      // return value + 'virus'
                //     // return value.split("").join("\n");  
                //   },
                textStyle: {
                    color: textColor, //X轴右侧字体设置
                    fontSize: 12,
                }
            },
            splitLine: {
                show: false
            }
        }],
        yAxis: [{
            type: 'category',
            inverse: true,
            position: 'right',
            axisLine: {
                show: false
            },
            axisTick: {
                show: false
            },
            axisLabel: {
                show: false
            },
            data: myData
        }, {
            gridIndex: 1,
            type: 'category',
            inverse: true,
            position: 'left',
            axisLine: {
                show: false
            },
            axisTick: {
                show: false
            },
            axisLabel: {
                show: true,
                textStyle: {
                    color: textColor, //中间字体设置
                    fontSize: 12,
                },
            },
            splitNumber: 8,
            data: myData.map(function(value) {
                return {
                    value: value,
                    textStyle: {
                        align: 'center',
                    }
                }
            })
        }, {
            gridIndex: 2,
            type: 'category',
            inverse: true,
            position: 'left',
            axisLine: {
                show: false
            },
            axisTick: {
                show: false
            },
            axisLabel: {
                show: false
            },
            data: myData
        }],
        series: []

    },
    options: []
}

barChartThreeoption.baseOption.timeline.data.push(timeLineData[0])
barChartThreeoption.options.push({
    series: [{
            type: 'pictorialBar',
            xAxisIndex: 0,
            yAxisIndex: 0,
            // symbol: 'rect',
            itemStyle: {
                normal: {
                    color: 'rgba(0,0,0,0)'
                }
            },
            barWidth: 10,
            // symbolRepeat: true,
            // symbolSize: 14,
            data: lineData,
            barGap: '-100%',
            barCategoryGap: 0,
            label: {
                normal: {
                    show: true,
                    formatter: (series) => {
                        return lastYearData[timeLineData[0]][series.dataIndex] + '%'
                    },
                    position: 'insideTopLeft',
                    textStyle: {
                        color: textColor, //左侧字体设置
                        fontSize: 12,
                    },
                    offset: [0, -10],
                }
            },
            z: -100,
            animationEasing: 'elasticOut',
            animationDelay: function(idx) {
                return idx * 600;
            }
        }, {
            name: '2017',
            type: 'bar',
            xAxisIndex: 0,
            yAxisIndex: 0,
            //  symbol: 'rect',
            barWidth: 10,
            itemStyle: {
                normal: {
                    barBorderRadius: 5,
                    color: colorList[0]
                }
            },
            // symbolRepeat: true,
            // symbolSize: 14,
            data: lastYearData[timeLineData[0]],
            animationEasing: 'elasticOut',
            animationDelay: function(idx) {
                return idx * 600;
            }
        },
        {
            type: 'pictorialBar',
            xAxisIndex: 2,
            yAxisIndex: 2,
            symbol: 'rect',
            itemStyle: {
                normal: {
                    color: 'rgba(0,0,0,0)'
                }
            },
            barWidth: 10,
            symbolRepeat: true,
            symbolSize: 14,
            data: lineData,
            barGap: '-100%',
            barCategoryGap: 0,
            label: {
                normal: {
                    show: true,
                    formatter: (series) => {
                        return thisYearData[timeLineData[0]][series.dataIndex] + '%'
                    },
                    position: 'insideTopRight',
                    textStyle: {
                        color: textColor, //右侧字体设置
                        fontSize: 12,
                    },
                    offset: [0, -10],
                }
            },
            z: -100,
            animationEasing: 'elasticOut',
            animationDelay: function(idx) {
                return idx * 600;
            }
        }, {
            name: '2018',
            type: 'bar',
            xAxisIndex: 2,
            yAxisIndex: 2,
            //   symbol: 'rect',
            barWidth: 10,
            itemStyle: {
                normal: {
                    barBorderRadius: 5,
                    color: colorList[1]
                }
            },
            // symbolRepeat: true,
            // symbolSize: 14,
            data: thisYearData[timeLineData[0]],
            animationEasing: 'elasticOut',
            animationDelay: function(idx) {
                return idx * 600;
            }
        }
    ]
});


barChartThird.setOption(barChartThreeoption)